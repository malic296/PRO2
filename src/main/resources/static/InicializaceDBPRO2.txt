-- Drop tables if they exist in the correct order (starting with the ones that depend on others)
DROP TABLE IF EXISTS user_run CASCADE;
DROP TABLE IF EXISTS user_race CASCADE;
DROP TABLE IF EXISTS run CASCADE;
DROP TABLE IF EXISTS race CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS team CASCADE;

-- Create the "team" table (stores team names: Red, Green, Blue)
CREATE TABLE team (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
);

-- Insert teams (Red, Green, Blue)
INSERT INTO team (name) VALUES ('Red'), ('Green'), ('Blue');

-- Create the "users" table (with a foreign key to the team table)
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    encrypted_password VARCHAR(255) NOT NULL,
    is_admin BOOLEAN NOT NULL,
    team_id INT,  -- Foreign key referencing the "team" table
    FOREIGN KEY (team_id) REFERENCES team(id) ON DELETE SET NULL  -- Foreign key to team table
);

INSERT INTO users (email, encrypted_password, is_admin, team_id) VALUES
('janmalek21JM@gmail.com', '777c3b1e43076cc212b7409cbe49cb3f527fa446068f164a86f605e93217673d', TRUE, 1);

-- Create the "run" table
CREATE TABLE run (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    address VARCHAR(255),
    date TIMESTAMP NOT NULL,
	creator VARCHAR(255) NOT NULL
);

-- Create the "race" table
CREATE TABLE race (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    address VARCHAR(255),
    date TIMESTAMP NOT NULL,
    capacity INT NOT NULL,
	creator VARCHAR(255) NOT NULL
);

-- Create the "user_run" table (many-to-many relationship between "users" and "run")
CREATE TABLE user_run (
    id SERIAL PRIMARY KEY,
    user_id INT NOT NULL,
    run_id INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (run_id) REFERENCES run (id) ON DELETE CASCADE,
    CONSTRAINT user_run_unique UNIQUE (user_id, run_id) -- Prevents duplicate entries for the same user and run
);

-- Create the "user_race" table (many-to-many relationship between "users" and "race")
CREATE TABLE user_race (
    id SERIAL PRIMARY KEY,
    user_id INT NOT NULL,
    race_id INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (race_id) REFERENCES race (id) ON DELETE CASCADE,
    CONSTRAINT user_race_unique UNIQUE (user_id, race_id) -- Prevents duplicate entries for the same user and race
);

